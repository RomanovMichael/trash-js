// 📝 Условие (Two Sum: Unique Pairs):
// Дано:

// Массив целых чисел nums (может быть неотсортирован).

// Целое число target.

// Нужно:
// Найти все уникальные пары чисел в массиве, сумма которых равна target.
// ➡️ Каждая пара должна быть уникальной:

// Например, [2, 3] и [3, 2] считаются одной и той же парой.

// Если пара уже встречалась, повторять её не нужно.

// Формат результата:
// Возвращать массив пар (двумерный массив):

// js
// Копировать
// Редактировать
// [
//   [num1, num2],
//   [num3, num4],
//   ...
// ]
// ✅ Пример 1:
// js
// Копировать
// Редактировать
// Input: nums = [1, 2, 3, 2, 3, 4], target = 5
// Output: [[1,4], [2,3]]
// 👉 Почему:
// 1 + 4 = 5
// 2 + 3 = 5 (и вторая пара [3,2] считается той же парой, её не нужно дублировать).

// ✅ Пример 2:
// js
// Копировать
// Редактировать
// Input: nums = [2, 2, 2, 2], target = 4
// Output: [[2,2]]
// 👉 Почему: только одна пара (2+2=4), повторов нет.

// ✅ Пример 3:
// js
// Копировать
// Редактировать
// Input: nums = [1, 1, 1, 1], target = 3
// Output: []
// 👉 Почему: нет ни одной пары, которая даёт 3.

// 💡 Важно:
// Порядок внутри пар не важен.

// Порядок самих пар в массиве тоже не важен.

// Нет требований к индексу, возвращаем только сами числа.

// 🛠 Что обычно используют:
// Часто используют Set для хранения уже встреченных пар, чтобы избежать повторов.

// Оптимальная сложность: O(n) по времени и O(n) по памяти (если использовать хэштаблицу или Set).



const sum = (nums, target) => {
    const result = []
    const map = new Map()
    const seen = new Set()

    for (let i = 0; i < nums.length; i++) {
        const complement = target - nums[i]

        if(map.has(complement)) { 
            const sortedPair = [complement, nums[i]].sort((a, b) => a - b)
            const pairKey = sortedPair.join('')
            

            if(!seen.has(pairKey)) {
                result.push(sortedPair)
            } 

            seen.add(pairKey)
            
        } else {
            map.set(nums[i], i)
        }
    }

    return result
}

const r = sum([1, 2, 3, 2, 3, 4], 5)

console.log(r)