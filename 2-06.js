
const sumNested = (arr) => {
    let sum = 0
    
    for(let el of arr) {
        if(typeof el === 'number') {
            sum += el
        } else if (Array.isArray(el)) {
            sum += sumNested(el)
        }
    }

    return sum
}

const depth = (arr, level = 0) => {
    let max = 0
    console.log('‚Üí –í—ã–∑–æ–≤ –Ω–∞ —É—Ä–æ–≤–Ω–µ', level, '| arr =', arr)

    for (let el of arr) {
        if (Array.isArray(el)) {
            console.log('  ‚§∑ –ù–∞–π–¥–µ–Ω –º–∞—Å—Å–∏–≤:', el)
            const innerDepth = depth(el, level + 1)
            console.log(`  üîô –í–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –≥–ª—É–±–∏–Ω–∞ ${innerDepth} –∏–∑`, el)
            max = Math.max(max, innerDepth)
            console.log(`  üìä max –æ–±–Ω–æ–≤–ª—ë–Ω –¥–æ ${max}`)
        }
    }

    const result = max + 1
    console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç —Å —É—Ä–æ–≤–Ω—è', level, '| —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result)
    return result
}



// console.log(depth([1, 2, 3])         )  // ‚Üí 1)
// console.log(depth([1, [2, 3]])       )  // ‚Üí 2)
console.log(depth([1, [2, [3, [4]]]]))  // ‚Üí 4)
// console.log(sumNested([1, [2, [3, 1]], 3])) // üëâ 15
// sumNested([[1, 2], 3, [4, [5]]]) // üëâ 15
