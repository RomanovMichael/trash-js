// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Å–∫–æ–±–æ–∫.
// üëâ –°—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ '(', ')', '{', '}', '[', ']'.
// üìã –ü—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
// –ö–∞–∂–¥–æ–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–µ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞.
// // –°–∫–æ–±–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

    const s = "()[]{}"
    const s1 = "({[]})"
    const s2 = "([)]"
    const s3 = "{[]}"
    const stack = []
    
    const map = {
        '(': ')',
        '{': '}',
        '[': ']'
    }

    const isValid = (str) => {
        for(let char of str ) {
            if(map[char]) {
                stack.push(char)
                // console.log(stack)
            } else {

                const last = stack.pop()
                // console.log(stack)
                if(map[last] !== char) { 
                    return false
                }
            }
        }
        return stack.length === 0
    }

    // isValid(s3)

    const l = isValid(s3)
    console.log(l)
    
// ‚û°Ô∏è –°–ª–æ–∂–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è:

// –¶–∏–∫–ª –ø–æ —Å—Ç—Ä–æ–∫–µ: O(n) (n ‚Äî –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏)

// –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞:

// map[char] ‚ûî —ç—Ç–æ O(1) (–ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á—É –≤ –æ–±—ä–µ–∫—Ç–µ)

// stack.push() –∏ stack.pop():

// ‚ùó –û–±–∞ –º–µ—Ç–æ–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∑–∞ O(1), –ø–æ—Ç–æ–º—É —á—Ç–æ —Å—Ç–µ–∫ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Å–∏–≤, –≥–¥–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞.

// üëâ –ü–æ—á–µ–º—É pop() ‚Äî O(1):
// JavaScript –º–∞—Å—Å–∏–≤—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Ç–∞–∫, —á—Ç–æ:

// push() –∏ pop() —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞ ‚Äî —ç—Ç–æ O(1)

// –ê –≤–æ—Ç –µ—Å–ª–∏ –±—ã —Ç—ã –¥–µ–ª–∞–ª shift() (—É–¥–∞–ª–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞), —ç—Ç–æ –±—ã–ª–æ –±—ã O(n), –ø–æ—Ç–æ–º—É —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ —Å–¥–≤–∏–≥–∞—Ç—å.

// ‚úÖ –í—ã–≤–æ–¥:

// –¶–∏–∫–ª ‚Äî O(n)

// –í—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Äî O(1)

// üëâ –ò—Ç–æ–≥–æ–≤–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n).



var isValid = function(s) {
    for (let char of s) {
        if(map[char]) {
            stack.push(char)
        } else {
            const last = stack.pop()

            if (map[last] !== char) {
                return false
            }
        }
    }
    return stack.length === 0
};